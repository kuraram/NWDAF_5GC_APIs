/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestedContext Contains types of analytics context information.
type RequestedContext struct {
	// List of analytics context types.
	Contexts []ContextType `json:"contexts"`
}

// NewRequestedContext instantiates a new RequestedContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestedContext(contexts []ContextType) *RequestedContext {
	this := RequestedContext{}
	this.Contexts = contexts
	return &this
}

// NewRequestedContextWithDefaults instantiates a new RequestedContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestedContextWithDefaults() *RequestedContext {
	this := RequestedContext{}
	return &this
}

// GetContexts returns the Contexts field value
func (o *RequestedContext) GetContexts() []ContextType {
	if o == nil {
		var ret []ContextType
		return ret
	}

	return o.Contexts
}

// GetContextsOk returns a tuple with the Contexts field value
// and a boolean to check if the value has been set.
func (o *RequestedContext) GetContextsOk() ([]ContextType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contexts, true
}

// SetContexts sets field value
func (o *RequestedContext) SetContexts(v []ContextType) {
	o.Contexts = v
}

func (o RequestedContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contexts"] = o.Contexts
	}
	return json.Marshal(toSerialize)
}

type NullableRequestedContext struct {
	value *RequestedContext
	isSet bool
}

func (v NullableRequestedContext) Get() *RequestedContext {
	return v.value
}

func (v *NullableRequestedContext) Set(val *RequestedContext) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestedContext) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestedContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestedContext(val *RequestedContext) *NullableRequestedContext {
	return &NullableRequestedContext{value: val, isSet: true}
}

func (v NullableRequestedContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestedContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


