/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NfStatus Contains the percentage of time spent on various NF states.
type NfStatus struct {
	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusRegistered *int32 `json:"statusRegistered,omitempty"`
	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusUnregistered *int32 `json:"statusUnregistered,omitempty"`
	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusUndiscoverable *int32 `json:"statusUndiscoverable,omitempty"`
}

// NewNfStatus instantiates a new NfStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNfStatus() *NfStatus {
	this := NfStatus{}
	return &this
}

// NewNfStatusWithDefaults instantiates a new NfStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNfStatusWithDefaults() *NfStatus {
	this := NfStatus{}
	return &this
}

// GetStatusRegistered returns the StatusRegistered field value if set, zero value otherwise.
func (o *NfStatus) GetStatusRegistered() int32 {
	if o == nil || o.StatusRegistered == nil {
		var ret int32
		return ret
	}
	return *o.StatusRegistered
}

// GetStatusRegisteredOk returns a tuple with the StatusRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfStatus) GetStatusRegisteredOk() (*int32, bool) {
	if o == nil || o.StatusRegistered == nil {
		return nil, false
	}
	return o.StatusRegistered, true
}

// HasStatusRegistered returns a boolean if a field has been set.
func (o *NfStatus) HasStatusRegistered() bool {
	if o != nil && o.StatusRegistered != nil {
		return true
	}

	return false
}

// SetStatusRegistered gets a reference to the given int32 and assigns it to the StatusRegistered field.
func (o *NfStatus) SetStatusRegistered(v int32) {
	o.StatusRegistered = &v
}

// GetStatusUnregistered returns the StatusUnregistered field value if set, zero value otherwise.
func (o *NfStatus) GetStatusUnregistered() int32 {
	if o == nil || o.StatusUnregistered == nil {
		var ret int32
		return ret
	}
	return *o.StatusUnregistered
}

// GetStatusUnregisteredOk returns a tuple with the StatusUnregistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfStatus) GetStatusUnregisteredOk() (*int32, bool) {
	if o == nil || o.StatusUnregistered == nil {
		return nil, false
	}
	return o.StatusUnregistered, true
}

// HasStatusUnregistered returns a boolean if a field has been set.
func (o *NfStatus) HasStatusUnregistered() bool {
	if o != nil && o.StatusUnregistered != nil {
		return true
	}

	return false
}

// SetStatusUnregistered gets a reference to the given int32 and assigns it to the StatusUnregistered field.
func (o *NfStatus) SetStatusUnregistered(v int32) {
	o.StatusUnregistered = &v
}

// GetStatusUndiscoverable returns the StatusUndiscoverable field value if set, zero value otherwise.
func (o *NfStatus) GetStatusUndiscoverable() int32 {
	if o == nil || o.StatusUndiscoverable == nil {
		var ret int32
		return ret
	}
	return *o.StatusUndiscoverable
}

// GetStatusUndiscoverableOk returns a tuple with the StatusUndiscoverable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfStatus) GetStatusUndiscoverableOk() (*int32, bool) {
	if o == nil || o.StatusUndiscoverable == nil {
		return nil, false
	}
	return o.StatusUndiscoverable, true
}

// HasStatusUndiscoverable returns a boolean if a field has been set.
func (o *NfStatus) HasStatusUndiscoverable() bool {
	if o != nil && o.StatusUndiscoverable != nil {
		return true
	}

	return false
}

// SetStatusUndiscoverable gets a reference to the given int32 and assigns it to the StatusUndiscoverable field.
func (o *NfStatus) SetStatusUndiscoverable(v int32) {
	o.StatusUndiscoverable = &v
}

func (o NfStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StatusRegistered != nil {
		toSerialize["statusRegistered"] = o.StatusRegistered
	}
	if o.StatusUnregistered != nil {
		toSerialize["statusUnregistered"] = o.StatusUnregistered
	}
	if o.StatusUndiscoverable != nil {
		toSerialize["statusUndiscoverable"] = o.StatusUndiscoverable
	}
	return json.Marshal(toSerialize)
}

type NullableNfStatus struct {
	value *NfStatus
	isSet bool
}

func (v NullableNfStatus) Get() *NfStatus {
	return v.value
}

func (v *NullableNfStatus) Set(val *NfStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNfStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNfStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNfStatus(val *NfStatus) *NullableNfStatus {
	return &NullableNfStatus{value: val, isSet: true}
}

func (v NullableNfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNfStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


