/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessInactTimerForUeComm Represents the N4 Session inactivity timer.
type SessInactTimerForUeComm struct {
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.  
	N4SessId *int32 `json:"N4SessId,omitempty"`
	// indicating a time in seconds.
	SessInactiveTimer *int32 `json:"sessInactiveTimer,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence *int32 `json:"confidence,omitempty"`
}

// NewSessInactTimerForUeComm instantiates a new SessInactTimerForUeComm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessInactTimerForUeComm() *SessInactTimerForUeComm {
	this := SessInactTimerForUeComm{}
	return &this
}

// NewSessInactTimerForUeCommWithDefaults instantiates a new SessInactTimerForUeComm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessInactTimerForUeCommWithDefaults() *SessInactTimerForUeComm {
	this := SessInactTimerForUeComm{}
	return &this
}

// GetN4SessId returns the N4SessId field value if set, zero value otherwise.
func (o *SessInactTimerForUeComm) GetN4SessId() int32 {
	if o == nil || o.N4SessId == nil {
		var ret int32
		return ret
	}
	return *o.N4SessId
}

// GetN4SessIdOk returns a tuple with the N4SessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessInactTimerForUeComm) GetN4SessIdOk() (*int32, bool) {
	if o == nil || o.N4SessId == nil {
		return nil, false
	}
	return o.N4SessId, true
}

// HasN4SessId returns a boolean if a field has been set.
func (o *SessInactTimerForUeComm) HasN4SessId() bool {
	if o != nil && o.N4SessId != nil {
		return true
	}

	return false
}

// SetN4SessId gets a reference to the given int32 and assigns it to the N4SessId field.
func (o *SessInactTimerForUeComm) SetN4SessId(v int32) {
	o.N4SessId = &v
}

// GetSessInactiveTimer returns the SessInactiveTimer field value if set, zero value otherwise.
func (o *SessInactTimerForUeComm) GetSessInactiveTimer() int32 {
	if o == nil || o.SessInactiveTimer == nil {
		var ret int32
		return ret
	}
	return *o.SessInactiveTimer
}

// GetSessInactiveTimerOk returns a tuple with the SessInactiveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessInactTimerForUeComm) GetSessInactiveTimerOk() (*int32, bool) {
	if o == nil || o.SessInactiveTimer == nil {
		return nil, false
	}
	return o.SessInactiveTimer, true
}

// HasSessInactiveTimer returns a boolean if a field has been set.
func (o *SessInactTimerForUeComm) HasSessInactiveTimer() bool {
	if o != nil && o.SessInactiveTimer != nil {
		return true
	}

	return false
}

// SetSessInactiveTimer gets a reference to the given int32 and assigns it to the SessInactiveTimer field.
func (o *SessInactTimerForUeComm) SetSessInactiveTimer(v int32) {
	o.SessInactiveTimer = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *SessInactTimerForUeComm) GetConfidence() int32 {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessInactTimerForUeComm) GetConfidenceOk() (*int32, bool) {
	if o == nil || o.Confidence == nil {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *SessInactTimerForUeComm) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *SessInactTimerForUeComm) SetConfidence(v int32) {
	o.Confidence = &v
}

func (o SessInactTimerForUeComm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.N4SessId != nil {
		toSerialize["N4SessId"] = o.N4SessId
	}
	if o.SessInactiveTimer != nil {
		toSerialize["sessInactiveTimer"] = o.SessInactiveTimer
	}
	if o.Confidence != nil {
		toSerialize["confidence"] = o.Confidence
	}
	return json.Marshal(toSerialize)
}

type NullableSessInactTimerForUeComm struct {
	value *SessInactTimerForUeComm
	isSet bool
}

func (v NullableSessInactTimerForUeComm) Get() *SessInactTimerForUeComm {
	return v.value
}

func (v *NullableSessInactTimerForUeComm) Set(val *SessInactTimerForUeComm) {
	v.value = val
	v.isSet = true
}

func (v NullableSessInactTimerForUeComm) IsSet() bool {
	return v.isSet
}

func (v *NullableSessInactTimerForUeComm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessInactTimerForUeComm(val *SessInactTimerForUeComm) *NullableSessInactTimerForUeComm {
	return &NullableSessInactTimerForUeComm{value: val, isSet: true}
}

func (v NullableSessInactTimerForUeComm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessInactTimerForUeComm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


