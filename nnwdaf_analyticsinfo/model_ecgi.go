/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Ecgi struct for Ecgi
type Ecgi struct {
	PlmnId PlmnId `json:"plmnId"`
	EutraCellId string `json:"eutraCellId"`
	Nid *string `json:"nid,omitempty"`
}

// NewEcgi instantiates a new Ecgi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEcgi(plmnId PlmnId, eutraCellId string) *Ecgi {
	this := Ecgi{}
	this.PlmnId = plmnId
	this.EutraCellId = eutraCellId
	return &this
}

// NewEcgiWithDefaults instantiates a new Ecgi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEcgiWithDefaults() *Ecgi {
	this := Ecgi{}
	return &this
}

// GetPlmnId returns the PlmnId field value
func (o *Ecgi) GetPlmnId() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value
// and a boolean to check if the value has been set.
func (o *Ecgi) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlmnId, true
}

// SetPlmnId sets field value
func (o *Ecgi) SetPlmnId(v PlmnId) {
	o.PlmnId = v
}

// GetEutraCellId returns the EutraCellId field value
func (o *Ecgi) GetEutraCellId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EutraCellId
}

// GetEutraCellIdOk returns a tuple with the EutraCellId field value
// and a boolean to check if the value has been set.
func (o *Ecgi) GetEutraCellIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EutraCellId, true
}

// SetEutraCellId sets field value
func (o *Ecgi) SetEutraCellId(v string) {
	o.EutraCellId = v
}

// GetNid returns the Nid field value if set, zero value otherwise.
func (o *Ecgi) GetNid() string {
	if o == nil || o.Nid == nil {
		var ret string
		return ret
	}
	return *o.Nid
}

// GetNidOk returns a tuple with the Nid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ecgi) GetNidOk() (*string, bool) {
	if o == nil || o.Nid == nil {
		return nil, false
	}
	return o.Nid, true
}

// HasNid returns a boolean if a field has been set.
func (o *Ecgi) HasNid() bool {
	if o != nil && o.Nid != nil {
		return true
	}

	return false
}

// SetNid gets a reference to the given string and assigns it to the Nid field.
func (o *Ecgi) SetNid(v string) {
	o.Nid = &v
}

func (o Ecgi) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["plmnId"] = o.PlmnId
	}
	if true {
		toSerialize["eutraCellId"] = o.EutraCellId
	}
	if o.Nid != nil {
		toSerialize["nid"] = o.Nid
	}
	return json.Marshal(toSerialize)
}

type NullableEcgi struct {
	value *Ecgi
	isSet bool
}

func (v NullableEcgi) Get() *Ecgi {
	return v.value
}

func (v *NullableEcgi) Set(val *Ecgi) {
	v.value = val
	v.isSet = true
}

func (v NullableEcgi) IsSet() bool {
	return v.isSet
}

func (v *NullableEcgi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEcgi(val *Ecgi) *NullableEcgi {
	return &NullableEcgi{value: val, isSet: true}
}

func (v NullableEcgi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEcgi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


