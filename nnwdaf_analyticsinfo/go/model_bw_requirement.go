/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type BwRequirement struct {

	AppId string `json:"appId"`

	MarBwDl string `json:"marBwDl,omitempty"`

	MarBwUl string `json:"marBwUl,omitempty"`

	MirBwDl string `json:"mirBwDl,omitempty"`

	MirBwUl string `json:"mirBwUl,omitempty"`
}

// AssertBwRequirementRequired checks if the required fields are not zero-ed
func AssertBwRequirementRequired(obj BwRequirement) error {
	elements := map[string]interface{}{
		"appId": obj.AppId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseBwRequirementRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of BwRequirement (e.g. [][]BwRequirement), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBwRequirementRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBwRequirement, ok := obj.(BwRequirement)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBwRequirementRequired(aBwRequirement)
	})
}
