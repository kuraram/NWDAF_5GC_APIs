/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type UeMobility struct {

	Ts time.Time `json:"ts,omitempty"`

	RecurringTime ScheduledCommunicationTime `json:"recurringTime,omitempty"`

	Duration int32 `json:"duration"`

	DurationVariance float32 `json:"durationVariance,omitempty"`

	LocInfos []LocationInfo `json:"locInfos"`
}

// AssertUeMobilityRequired checks if the required fields are not zero-ed
func AssertUeMobilityRequired(obj UeMobility) error {
	elements := map[string]interface{}{
		"duration": obj.Duration,
		"locInfos": obj.LocInfos,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertScheduledCommunicationTimeRequired(obj.RecurringTime); err != nil {
		return err
	}
	for _, el := range obj.LocInfos {
		if err := AssertLocationInfoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseUeMobilityRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UeMobility (e.g. [][]UeMobility), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUeMobilityRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUeMobility, ok := obj.(UeMobility)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUeMobilityRequired(aUeMobility)
	})
}
