/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CongestionInfo struct {

	CongType CongestionType `json:"congType"`

	TimeIntev TimeWindow `json:"timeIntev"`

	Nsi ThresholdLevel `json:"nsi"`

	Confidence int32 `json:"confidence,omitempty"`
}

// AssertCongestionInfoRequired checks if the required fields are not zero-ed
func AssertCongestionInfoRequired(obj CongestionInfo) error {
	elements := map[string]interface{}{
		"congType": obj.CongType,
		"timeIntev": obj.TimeIntev,
		"nsi": obj.Nsi,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCongestionTypeRequired(obj.CongType); err != nil {
		return err
	}
	if err := AssertTimeWindowRequired(obj.TimeIntev); err != nil {
		return err
	}
	if err := AssertThresholdLevelRequired(obj.Nsi); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCongestionInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CongestionInfo (e.g. [][]CongestionInfo), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCongestionInfoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCongestionInfo, ok := obj.(CongestionInfo)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCongestionInfoRequired(aCongestionInfo)
	})
}
