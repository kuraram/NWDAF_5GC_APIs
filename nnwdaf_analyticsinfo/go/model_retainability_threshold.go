/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type RetainabilityThreshold struct {

	RelFlowNum int32 `json:"relFlowNum,omitempty"`

	RelTimeUnit TimeUnit `json:"relTimeUnit,omitempty"`

	RelFlowRatio int32 `json:"relFlowRatio,omitempty"`
}

// AssertRetainabilityThresholdRequired checks if the required fields are not zero-ed
func AssertRetainabilityThresholdRequired(obj RetainabilityThreshold) error {
	if err := AssertTimeUnitRequired(obj.RelTimeUnit); err != nil {
		return err
	}
	return nil
}

// AssertRecurseRetainabilityThresholdRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RetainabilityThreshold (e.g. [][]RetainabilityThreshold), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRetainabilityThresholdRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRetainabilityThreshold, ok := obj.(RetainabilityThreshold)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRetainabilityThresholdRequired(aRetainabilityThreshold)
	})
}
