/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PlmnId struct {

	Mcc string `json:"mcc"`

	Mnc string `json:"mnc"`
}

// AssertPlmnIdRequired checks if the required fields are not zero-ed
func AssertPlmnIdRequired(obj PlmnId) error {
	elements := map[string]interface{}{
		"mcc": obj.Mcc,
		"mnc": obj.Mnc,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePlmnIdRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PlmnId (e.g. [][]PlmnId), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePlmnIdRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPlmnId, ok := obj.(PlmnId)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPlmnIdRequired(aPlmnId)
	})
}
