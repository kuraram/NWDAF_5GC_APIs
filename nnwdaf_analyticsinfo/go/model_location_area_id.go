/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type LocationAreaId struct {

	PlmnId PlmnId `json:"plmnId"`

	Lac string `json:"lac"`
}

// AssertLocationAreaIdRequired checks if the required fields are not zero-ed
func AssertLocationAreaIdRequired(obj LocationAreaId) error {
	elements := map[string]interface{}{
		"plmnId": obj.PlmnId,
		"lac": obj.Lac,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPlmnIdRequired(obj.PlmnId); err != nil {
		return err
	}
	return nil
}

// AssertRecurseLocationAreaIdRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LocationAreaId (e.g. [][]LocationAreaId), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseLocationAreaIdRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLocationAreaId, ok := obj.(LocationAreaId)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertLocationAreaIdRequired(aLocationAreaId)
	})
}
