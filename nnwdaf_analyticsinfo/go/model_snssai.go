/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Snssai struct {

	Sst int32 `json:"sst"`

	Sd string `json:"sd,omitempty"`
}

// AssertSnssaiRequired checks if the required fields are not zero-ed
func AssertSnssaiRequired(obj Snssai) error {
	elements := map[string]interface{}{
		"sst": obj.Sst,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSnssaiRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Snssai (e.g. [][]Snssai), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSnssaiRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSnssai, ok := obj.(Snssai)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSnssaiRequired(aSnssai)
	})
}
