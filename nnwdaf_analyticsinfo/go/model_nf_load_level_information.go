/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type NfLoadLevelInformation struct {

	NfType NfType `json:"nfType"`

	NfInstanceId string `json:"nfInstanceId"`

	NfSetId string `json:"nfSetId,omitempty"`

	NfStatus NfStatus `json:"nfStatus,omitempty"`

	NfCpuUsage int32 `json:"nfCpuUsage,omitempty"`

	NfMemoryUsage int32 `json:"nfMemoryUsage,omitempty"`

	NfStorageUsage int32 `json:"nfStorageUsage,omitempty"`

	NfLoadLevelAverage int32 `json:"nfLoadLevelAverage,omitempty"`

	NfLoadLevelpeak int32 `json:"nfLoadLevelpeak,omitempty"`

	Snssai Snssai `json:"snssai,omitempty"`

	Confidence int32 `json:"confidence,omitempty"`
}

// AssertNfLoadLevelInformationRequired checks if the required fields are not zero-ed
func AssertNfLoadLevelInformationRequired(obj NfLoadLevelInformation) error {
	elements := map[string]interface{}{
		"nfType": obj.NfType,
		"nfInstanceId": obj.NfInstanceId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNfTypeRequired(obj.NfType); err != nil {
		return err
	}
	if err := AssertNfStatusRequired(obj.NfStatus); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.Snssai); err != nil {
		return err
	}
	return nil
}

// AssertRecurseNfLoadLevelInformationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NfLoadLevelInformation (e.g. [][]NfLoadLevelInformation), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNfLoadLevelInformationRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNfLoadLevelInformation, ok := obj.(NfLoadLevelInformation)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNfLoadLevelInformationRequired(aNfLoadLevelInformation)
	})
}
