/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type LocationInfo struct {

	Loc UserLocation `json:"loc"`

	Ratio int32 `json:"ratio,omitempty"`

	Confidence int32 `json:"confidence,omitempty"`
}

// AssertLocationInfoRequired checks if the required fields are not zero-ed
func AssertLocationInfoRequired(obj LocationInfo) error {
	elements := map[string]interface{}{
		"loc": obj.Loc,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertUserLocationRequired(obj.Loc); err != nil {
		return err
	}
	return nil
}

// AssertRecurseLocationInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LocationInfo (e.g. [][]LocationInfo), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseLocationInfoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLocationInfo, ok := obj.(LocationInfo)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertLocationInfoRequired(aLocationInfo)
	})
}
