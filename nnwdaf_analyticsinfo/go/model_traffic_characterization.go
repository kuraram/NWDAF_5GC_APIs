/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TrafficCharacterization struct {

	Dnn string `json:"dnn,omitempty"`

	Snssai Snssai `json:"snssai,omitempty"`

	AppId string `json:"appId,omitempty"`

	FDescs []IpEthFlowDescription `json:"fDescs,omitempty"`

	// Unsigned integer identifying a volume in units of bytes.
	UlVol int64 `json:"ulVol,omitempty"`

	UlVolVariance float32 `json:"ulVolVariance,omitempty"`

	// Unsigned integer identifying a volume in units of bytes.
	DlVol int64 `json:"dlVol,omitempty"`

	DlVolVariance float32 `json:"dlVolVariance,omitempty"`
}

// AssertTrafficCharacterizationRequired checks if the required fields are not zero-ed
func AssertTrafficCharacterizationRequired(obj TrafficCharacterization) error {
	if err := AssertSnssaiRequired(obj.Snssai); err != nil {
		return err
	}
	for _, el := range obj.FDescs {
		if err := AssertIpEthFlowDescriptionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseTrafficCharacterizationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TrafficCharacterization (e.g. [][]TrafficCharacterization), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTrafficCharacterizationRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTrafficCharacterization, ok := obj.(TrafficCharacterization)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTrafficCharacterizationRequired(aTrafficCharacterization)
	})
}
