/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.1.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type InvalidParam struct {

	Param string `json:"param"`

	Reason string `json:"reason,omitempty"`
}

// AssertInvalidParamRequired checks if the required fields are not zero-ed
func AssertInvalidParamRequired(obj InvalidParam) error {
	elements := map[string]interface{}{
		"param": obj.Param,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseInvalidParamRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InvalidParam (e.g. [][]InvalidParam), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInvalidParamRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInvalidParam, ok := obj.(InvalidParam)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInvalidParamRequired(aInvalidParam)
	})
}
