/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BwRequirement struct for BwRequirement
type BwRequirement struct {
	AppId string `json:"appId"`
	MarBwDl *string `json:"marBwDl,omitempty"`
	MarBwUl *string `json:"marBwUl,omitempty"`
	MirBwDl *string `json:"mirBwDl,omitempty"`
	MirBwUl *string `json:"mirBwUl,omitempty"`
}

// NewBwRequirement instantiates a new BwRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBwRequirement(appId string) *BwRequirement {
	this := BwRequirement{}
	this.AppId = appId
	return &this
}

// NewBwRequirementWithDefaults instantiates a new BwRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBwRequirementWithDefaults() *BwRequirement {
	this := BwRequirement{}
	return &this
}

// GetAppId returns the AppId field value
func (o *BwRequirement) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *BwRequirement) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *BwRequirement) SetAppId(v string) {
	o.AppId = v
}

// GetMarBwDl returns the MarBwDl field value if set, zero value otherwise.
func (o *BwRequirement) GetMarBwDl() string {
	if o == nil || o.MarBwDl == nil {
		var ret string
		return ret
	}
	return *o.MarBwDl
}

// GetMarBwDlOk returns a tuple with the MarBwDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BwRequirement) GetMarBwDlOk() (*string, bool) {
	if o == nil || o.MarBwDl == nil {
		return nil, false
	}
	return o.MarBwDl, true
}

// HasMarBwDl returns a boolean if a field has been set.
func (o *BwRequirement) HasMarBwDl() bool {
	if o != nil && o.MarBwDl != nil {
		return true
	}

	return false
}

// SetMarBwDl gets a reference to the given string and assigns it to the MarBwDl field.
func (o *BwRequirement) SetMarBwDl(v string) {
	o.MarBwDl = &v
}

// GetMarBwUl returns the MarBwUl field value if set, zero value otherwise.
func (o *BwRequirement) GetMarBwUl() string {
	if o == nil || o.MarBwUl == nil {
		var ret string
		return ret
	}
	return *o.MarBwUl
}

// GetMarBwUlOk returns a tuple with the MarBwUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BwRequirement) GetMarBwUlOk() (*string, bool) {
	if o == nil || o.MarBwUl == nil {
		return nil, false
	}
	return o.MarBwUl, true
}

// HasMarBwUl returns a boolean if a field has been set.
func (o *BwRequirement) HasMarBwUl() bool {
	if o != nil && o.MarBwUl != nil {
		return true
	}

	return false
}

// SetMarBwUl gets a reference to the given string and assigns it to the MarBwUl field.
func (o *BwRequirement) SetMarBwUl(v string) {
	o.MarBwUl = &v
}

// GetMirBwDl returns the MirBwDl field value if set, zero value otherwise.
func (o *BwRequirement) GetMirBwDl() string {
	if o == nil || o.MirBwDl == nil {
		var ret string
		return ret
	}
	return *o.MirBwDl
}

// GetMirBwDlOk returns a tuple with the MirBwDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BwRequirement) GetMirBwDlOk() (*string, bool) {
	if o == nil || o.MirBwDl == nil {
		return nil, false
	}
	return o.MirBwDl, true
}

// HasMirBwDl returns a boolean if a field has been set.
func (o *BwRequirement) HasMirBwDl() bool {
	if o != nil && o.MirBwDl != nil {
		return true
	}

	return false
}

// SetMirBwDl gets a reference to the given string and assigns it to the MirBwDl field.
func (o *BwRequirement) SetMirBwDl(v string) {
	o.MirBwDl = &v
}

// GetMirBwUl returns the MirBwUl field value if set, zero value otherwise.
func (o *BwRequirement) GetMirBwUl() string {
	if o == nil || o.MirBwUl == nil {
		var ret string
		return ret
	}
	return *o.MirBwUl
}

// GetMirBwUlOk returns a tuple with the MirBwUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BwRequirement) GetMirBwUlOk() (*string, bool) {
	if o == nil || o.MirBwUl == nil {
		return nil, false
	}
	return o.MirBwUl, true
}

// HasMirBwUl returns a boolean if a field has been set.
func (o *BwRequirement) HasMirBwUl() bool {
	if o != nil && o.MirBwUl != nil {
		return true
	}

	return false
}

// SetMirBwUl gets a reference to the given string and assigns it to the MirBwUl field.
func (o *BwRequirement) SetMirBwUl(v string) {
	o.MirBwUl = &v
}

func (o BwRequirement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["appId"] = o.AppId
	}
	if o.MarBwDl != nil {
		toSerialize["marBwDl"] = o.MarBwDl
	}
	if o.MarBwUl != nil {
		toSerialize["marBwUl"] = o.MarBwUl
	}
	if o.MirBwDl != nil {
		toSerialize["mirBwDl"] = o.MirBwDl
	}
	if o.MirBwUl != nil {
		toSerialize["mirBwUl"] = o.MirBwUl
	}
	return json.Marshal(toSerialize)
}

type NullableBwRequirement struct {
	value *BwRequirement
	isSet bool
}

func (v NullableBwRequirement) Get() *BwRequirement {
	return v.value
}

func (v *NullableBwRequirement) Set(val *BwRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableBwRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableBwRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBwRequirement(val *BwRequirement) *NullableBwRequirement {
	return &NullableBwRequirement{value: val, isSet: true}
}

func (v NullableBwRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBwRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


