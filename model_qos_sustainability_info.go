/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// QosSustainabilityInfo Represents the QoS Sustainability information.
type QosSustainabilityInfo struct {
	AreaInfo *NetworkAreaInfo `json:"areaInfo,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	StartTs *time.Time `json:"startTs,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	EndTs *time.Time `json:"endTs,omitempty"`
	QosFlowRetThd *RetainabilityThreshold `json:"qosFlowRetThd,omitempty"`
	// String representing a bit rate prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\".
	RanUeThrouThd *string `json:"ranUeThrouThd,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence *int32 `json:"confidence,omitempty"`
}

// NewQosSustainabilityInfo instantiates a new QosSustainabilityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosSustainabilityInfo() *QosSustainabilityInfo {
	this := QosSustainabilityInfo{}
	return &this
}

// NewQosSustainabilityInfoWithDefaults instantiates a new QosSustainabilityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosSustainabilityInfoWithDefaults() *QosSustainabilityInfo {
	this := QosSustainabilityInfo{}
	return &this
}

// GetAreaInfo returns the AreaInfo field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetAreaInfo() NetworkAreaInfo {
	if o == nil || o.AreaInfo == nil {
		var ret NetworkAreaInfo
		return ret
	}
	return *o.AreaInfo
}

// GetAreaInfoOk returns a tuple with the AreaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetAreaInfoOk() (*NetworkAreaInfo, bool) {
	if o == nil || o.AreaInfo == nil {
		return nil, false
	}
	return o.AreaInfo, true
}

// HasAreaInfo returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasAreaInfo() bool {
	if o != nil && o.AreaInfo != nil {
		return true
	}

	return false
}

// SetAreaInfo gets a reference to the given NetworkAreaInfo and assigns it to the AreaInfo field.
func (o *QosSustainabilityInfo) SetAreaInfo(v NetworkAreaInfo) {
	o.AreaInfo = &v
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetStartTs() time.Time {
	if o == nil || o.StartTs == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetStartTsOk() (*time.Time, bool) {
	if o == nil || o.StartTs == nil {
		return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasStartTs() bool {
	if o != nil && o.StartTs != nil {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given time.Time and assigns it to the StartTs field.
func (o *QosSustainabilityInfo) SetStartTs(v time.Time) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetEndTs() time.Time {
	if o == nil || o.EndTs == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetEndTsOk() (*time.Time, bool) {
	if o == nil || o.EndTs == nil {
		return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasEndTs() bool {
	if o != nil && o.EndTs != nil {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given time.Time and assigns it to the EndTs field.
func (o *QosSustainabilityInfo) SetEndTs(v time.Time) {
	o.EndTs = &v
}

// GetQosFlowRetThd returns the QosFlowRetThd field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetQosFlowRetThd() RetainabilityThreshold {
	if o == nil || o.QosFlowRetThd == nil {
		var ret RetainabilityThreshold
		return ret
	}
	return *o.QosFlowRetThd
}

// GetQosFlowRetThdOk returns a tuple with the QosFlowRetThd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetQosFlowRetThdOk() (*RetainabilityThreshold, bool) {
	if o == nil || o.QosFlowRetThd == nil {
		return nil, false
	}
	return o.QosFlowRetThd, true
}

// HasQosFlowRetThd returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasQosFlowRetThd() bool {
	if o != nil && o.QosFlowRetThd != nil {
		return true
	}

	return false
}

// SetQosFlowRetThd gets a reference to the given RetainabilityThreshold and assigns it to the QosFlowRetThd field.
func (o *QosSustainabilityInfo) SetQosFlowRetThd(v RetainabilityThreshold) {
	o.QosFlowRetThd = &v
}

// GetRanUeThrouThd returns the RanUeThrouThd field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetRanUeThrouThd() string {
	if o == nil || o.RanUeThrouThd == nil {
		var ret string
		return ret
	}
	return *o.RanUeThrouThd
}

// GetRanUeThrouThdOk returns a tuple with the RanUeThrouThd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetRanUeThrouThdOk() (*string, bool) {
	if o == nil || o.RanUeThrouThd == nil {
		return nil, false
	}
	return o.RanUeThrouThd, true
}

// HasRanUeThrouThd returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasRanUeThrouThd() bool {
	if o != nil && o.RanUeThrouThd != nil {
		return true
	}

	return false
}

// SetRanUeThrouThd gets a reference to the given string and assigns it to the RanUeThrouThd field.
func (o *QosSustainabilityInfo) SetRanUeThrouThd(v string) {
	o.RanUeThrouThd = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetSnssai() Snssai {
	if o == nil || o.Snssai == nil {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || o.Snssai == nil {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasSnssai() bool {
	if o != nil && o.Snssai != nil {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *QosSustainabilityInfo) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *QosSustainabilityInfo) GetConfidence() int32 {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosSustainabilityInfo) GetConfidenceOk() (*int32, bool) {
	if o == nil || o.Confidence == nil {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *QosSustainabilityInfo) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *QosSustainabilityInfo) SetConfidence(v int32) {
	o.Confidence = &v
}

func (o QosSustainabilityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AreaInfo != nil {
		toSerialize["areaInfo"] = o.AreaInfo
	}
	if o.StartTs != nil {
		toSerialize["startTs"] = o.StartTs
	}
	if o.EndTs != nil {
		toSerialize["endTs"] = o.EndTs
	}
	if o.QosFlowRetThd != nil {
		toSerialize["qosFlowRetThd"] = o.QosFlowRetThd
	}
	if o.RanUeThrouThd != nil {
		toSerialize["ranUeThrouThd"] = o.RanUeThrouThd
	}
	if o.Snssai != nil {
		toSerialize["snssai"] = o.Snssai
	}
	if o.Confidence != nil {
		toSerialize["confidence"] = o.Confidence
	}
	return json.Marshal(toSerialize)
}

type NullableQosSustainabilityInfo struct {
	value *QosSustainabilityInfo
	isSet bool
}

func (v NullableQosSustainabilityInfo) Get() *QosSustainabilityInfo {
	return v.value
}

func (v *NullableQosSustainabilityInfo) Set(val *QosSustainabilityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableQosSustainabilityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableQosSustainabilityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosSustainabilityInfo(val *QosSustainabilityInfo) *NullableQosSustainabilityInfo {
	return &NullableQosSustainabilityInfo{value: val, isSet: true}
}

func (v NullableQosSustainabilityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosSustainabilityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


