/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThresholdLevel struct for ThresholdLevel
type ThresholdLevel struct {
	CongLevel *int32 `json:"congLevel,omitempty"`
	NfLoadLevel *int32 `json:"nfLoadLevel,omitempty"`
	NfCpuUsage *int32 `json:"nfCpuUsage,omitempty"`
	NfMemoryUsage *int32 `json:"nfMemoryUsage,omitempty"`
	NfStorageUsage *int32 `json:"nfStorageUsage,omitempty"`
}

// NewThresholdLevel instantiates a new ThresholdLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdLevel() *ThresholdLevel {
	this := ThresholdLevel{}
	return &this
}

// NewThresholdLevelWithDefaults instantiates a new ThresholdLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdLevelWithDefaults() *ThresholdLevel {
	this := ThresholdLevel{}
	return &this
}

// GetCongLevel returns the CongLevel field value if set, zero value otherwise.
func (o *ThresholdLevel) GetCongLevel() int32 {
	if o == nil || o.CongLevel == nil {
		var ret int32
		return ret
	}
	return *o.CongLevel
}

// GetCongLevelOk returns a tuple with the CongLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdLevel) GetCongLevelOk() (*int32, bool) {
	if o == nil || o.CongLevel == nil {
		return nil, false
	}
	return o.CongLevel, true
}

// HasCongLevel returns a boolean if a field has been set.
func (o *ThresholdLevel) HasCongLevel() bool {
	if o != nil && o.CongLevel != nil {
		return true
	}

	return false
}

// SetCongLevel gets a reference to the given int32 and assigns it to the CongLevel field.
func (o *ThresholdLevel) SetCongLevel(v int32) {
	o.CongLevel = &v
}

// GetNfLoadLevel returns the NfLoadLevel field value if set, zero value otherwise.
func (o *ThresholdLevel) GetNfLoadLevel() int32 {
	if o == nil || o.NfLoadLevel == nil {
		var ret int32
		return ret
	}
	return *o.NfLoadLevel
}

// GetNfLoadLevelOk returns a tuple with the NfLoadLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdLevel) GetNfLoadLevelOk() (*int32, bool) {
	if o == nil || o.NfLoadLevel == nil {
		return nil, false
	}
	return o.NfLoadLevel, true
}

// HasNfLoadLevel returns a boolean if a field has been set.
func (o *ThresholdLevel) HasNfLoadLevel() bool {
	if o != nil && o.NfLoadLevel != nil {
		return true
	}

	return false
}

// SetNfLoadLevel gets a reference to the given int32 and assigns it to the NfLoadLevel field.
func (o *ThresholdLevel) SetNfLoadLevel(v int32) {
	o.NfLoadLevel = &v
}

// GetNfCpuUsage returns the NfCpuUsage field value if set, zero value otherwise.
func (o *ThresholdLevel) GetNfCpuUsage() int32 {
	if o == nil || o.NfCpuUsage == nil {
		var ret int32
		return ret
	}
	return *o.NfCpuUsage
}

// GetNfCpuUsageOk returns a tuple with the NfCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdLevel) GetNfCpuUsageOk() (*int32, bool) {
	if o == nil || o.NfCpuUsage == nil {
		return nil, false
	}
	return o.NfCpuUsage, true
}

// HasNfCpuUsage returns a boolean if a field has been set.
func (o *ThresholdLevel) HasNfCpuUsage() bool {
	if o != nil && o.NfCpuUsage != nil {
		return true
	}

	return false
}

// SetNfCpuUsage gets a reference to the given int32 and assigns it to the NfCpuUsage field.
func (o *ThresholdLevel) SetNfCpuUsage(v int32) {
	o.NfCpuUsage = &v
}

// GetNfMemoryUsage returns the NfMemoryUsage field value if set, zero value otherwise.
func (o *ThresholdLevel) GetNfMemoryUsage() int32 {
	if o == nil || o.NfMemoryUsage == nil {
		var ret int32
		return ret
	}
	return *o.NfMemoryUsage
}

// GetNfMemoryUsageOk returns a tuple with the NfMemoryUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdLevel) GetNfMemoryUsageOk() (*int32, bool) {
	if o == nil || o.NfMemoryUsage == nil {
		return nil, false
	}
	return o.NfMemoryUsage, true
}

// HasNfMemoryUsage returns a boolean if a field has been set.
func (o *ThresholdLevel) HasNfMemoryUsage() bool {
	if o != nil && o.NfMemoryUsage != nil {
		return true
	}

	return false
}

// SetNfMemoryUsage gets a reference to the given int32 and assigns it to the NfMemoryUsage field.
func (o *ThresholdLevel) SetNfMemoryUsage(v int32) {
	o.NfMemoryUsage = &v
}

// GetNfStorageUsage returns the NfStorageUsage field value if set, zero value otherwise.
func (o *ThresholdLevel) GetNfStorageUsage() int32 {
	if o == nil || o.NfStorageUsage == nil {
		var ret int32
		return ret
	}
	return *o.NfStorageUsage
}

// GetNfStorageUsageOk returns a tuple with the NfStorageUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdLevel) GetNfStorageUsageOk() (*int32, bool) {
	if o == nil || o.NfStorageUsage == nil {
		return nil, false
	}
	return o.NfStorageUsage, true
}

// HasNfStorageUsage returns a boolean if a field has been set.
func (o *ThresholdLevel) HasNfStorageUsage() bool {
	if o != nil && o.NfStorageUsage != nil {
		return true
	}

	return false
}

// SetNfStorageUsage gets a reference to the given int32 and assigns it to the NfStorageUsage field.
func (o *ThresholdLevel) SetNfStorageUsage(v int32) {
	o.NfStorageUsage = &v
}

func (o ThresholdLevel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CongLevel != nil {
		toSerialize["congLevel"] = o.CongLevel
	}
	if o.NfLoadLevel != nil {
		toSerialize["nfLoadLevel"] = o.NfLoadLevel
	}
	if o.NfCpuUsage != nil {
		toSerialize["nfCpuUsage"] = o.NfCpuUsage
	}
	if o.NfMemoryUsage != nil {
		toSerialize["nfMemoryUsage"] = o.NfMemoryUsage
	}
	if o.NfStorageUsage != nil {
		toSerialize["nfStorageUsage"] = o.NfStorageUsage
	}
	return json.Marshal(toSerialize)
}

type NullableThresholdLevel struct {
	value *ThresholdLevel
	isSet bool
}

func (v NullableThresholdLevel) Get() *ThresholdLevel {
	return v.value
}

func (v *NullableThresholdLevel) Set(val *ThresholdLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdLevel(val *ThresholdLevel) *NullableThresholdLevel {
	return &NullableThresholdLevel{value: val, isSet: true}
}

func (v NullableThresholdLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


