/*
Nnwdaf_AnalyticsInfo

Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// RedundantTransmissionExpPerTS The redundant transmission experience per Time Slot.
type RedundantTransmissionExpPerTS struct {
	// string with format 'date-time' as defined in OpenAPI.
	TsStart time.Time `json:"tsStart"`
	// indicating a time in seconds.
	TsDuration int32 `json:"tsDuration"`
	RedTransExp string `json:"redTransExp"`
	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	UeRatio *int32 `json:"ueRatio,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence *int32 `json:"confidence,omitempty"`
}

// NewRedundantTransmissionExpPerTS instantiates a new RedundantTransmissionExpPerTS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedundantTransmissionExpPerTS(tsStart time.Time, tsDuration int32, redTransExp string) *RedundantTransmissionExpPerTS {
	this := RedundantTransmissionExpPerTS{}
	this.TsStart = tsStart
	this.TsDuration = tsDuration
	this.RedTransExp = redTransExp
	return &this
}

// NewRedundantTransmissionExpPerTSWithDefaults instantiates a new RedundantTransmissionExpPerTS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedundantTransmissionExpPerTSWithDefaults() *RedundantTransmissionExpPerTS {
	this := RedundantTransmissionExpPerTS{}
	return &this
}

// GetTsStart returns the TsStart field value
func (o *RedundantTransmissionExpPerTS) GetTsStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TsStart
}

// GetTsStartOk returns a tuple with the TsStart field value
// and a boolean to check if the value has been set.
func (o *RedundantTransmissionExpPerTS) GetTsStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TsStart, true
}

// SetTsStart sets field value
func (o *RedundantTransmissionExpPerTS) SetTsStart(v time.Time) {
	o.TsStart = v
}

// GetTsDuration returns the TsDuration field value
func (o *RedundantTransmissionExpPerTS) GetTsDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TsDuration
}

// GetTsDurationOk returns a tuple with the TsDuration field value
// and a boolean to check if the value has been set.
func (o *RedundantTransmissionExpPerTS) GetTsDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TsDuration, true
}

// SetTsDuration sets field value
func (o *RedundantTransmissionExpPerTS) SetTsDuration(v int32) {
	o.TsDuration = v
}

// GetRedTransExp returns the RedTransExp field value
func (o *RedundantTransmissionExpPerTS) GetRedTransExp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedTransExp
}

// GetRedTransExpOk returns a tuple with the RedTransExp field value
// and a boolean to check if the value has been set.
func (o *RedundantTransmissionExpPerTS) GetRedTransExpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedTransExp, true
}

// SetRedTransExp sets field value
func (o *RedundantTransmissionExpPerTS) SetRedTransExp(v string) {
	o.RedTransExp = v
}

// GetUeRatio returns the UeRatio field value if set, zero value otherwise.
func (o *RedundantTransmissionExpPerTS) GetUeRatio() int32 {
	if o == nil || o.UeRatio == nil {
		var ret int32
		return ret
	}
	return *o.UeRatio
}

// GetUeRatioOk returns a tuple with the UeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedundantTransmissionExpPerTS) GetUeRatioOk() (*int32, bool) {
	if o == nil || o.UeRatio == nil {
		return nil, false
	}
	return o.UeRatio, true
}

// HasUeRatio returns a boolean if a field has been set.
func (o *RedundantTransmissionExpPerTS) HasUeRatio() bool {
	if o != nil && o.UeRatio != nil {
		return true
	}

	return false
}

// SetUeRatio gets a reference to the given int32 and assigns it to the UeRatio field.
func (o *RedundantTransmissionExpPerTS) SetUeRatio(v int32) {
	o.UeRatio = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *RedundantTransmissionExpPerTS) GetConfidence() int32 {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedundantTransmissionExpPerTS) GetConfidenceOk() (*int32, bool) {
	if o == nil || o.Confidence == nil {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *RedundantTransmissionExpPerTS) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *RedundantTransmissionExpPerTS) SetConfidence(v int32) {
	o.Confidence = &v
}

func (o RedundantTransmissionExpPerTS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tsStart"] = o.TsStart
	}
	if true {
		toSerialize["tsDuration"] = o.TsDuration
	}
	if true {
		toSerialize["redTransExp"] = o.RedTransExp
	}
	if o.UeRatio != nil {
		toSerialize["ueRatio"] = o.UeRatio
	}
	if o.Confidence != nil {
		toSerialize["confidence"] = o.Confidence
	}
	return json.Marshal(toSerialize)
}

type NullableRedundantTransmissionExpPerTS struct {
	value *RedundantTransmissionExpPerTS
	isSet bool
}

func (v NullableRedundantTransmissionExpPerTS) Get() *RedundantTransmissionExpPerTS {
	return v.value
}

func (v *NullableRedundantTransmissionExpPerTS) Set(val *RedundantTransmissionExpPerTS) {
	v.value = val
	v.isSet = true
}

func (v NullableRedundantTransmissionExpPerTS) IsSet() bool {
	return v.isSet
}

func (v *NullableRedundantTransmissionExpPerTS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedundantTransmissionExpPerTS(val *RedundantTransmissionExpPerTS) *NullableRedundantTransmissionExpPerTS {
	return &NullableRedundantTransmissionExpPerTS{value: val, isSet: true}
}

func (v NullableRedundantTransmissionExpPerTS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedundantTransmissionExpPerTS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


